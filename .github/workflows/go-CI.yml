name: CI

on:
  push:
    tags:
      - v*
    branches: [ master, main, feature/UBI-201-Add-push-2-dockerhub]
  pull_request:
    branches: [ master, main ]

inputs:
    build-lvl: 
        description: 'Arg to determine image build output (local=debian, test=alpine or prod=distroless)'
        required: true
        default: test
    dockerhub-user:
        description: 'DockerHub.com user to enable docker build artefacts push'
        required: true
        default: ${{ secrets.DOCKERHUB_USERNAME }}
    dockerhub-email:
        description: 'DockerHub.com email to enable docker build artefacts push'
        required: true
        default: ${{ secrets.DOCKERHUB_EMAIL }}
    dockerhub-pwd:
        description: 'DockerHub.com password to enable docker build artefacts push'
        required: true
        default: ${{ secrets.DOCKERHUB_PWD }}
    repo-name:
        description: 'Name of the repository that runs the Action'
        required: true
        default: ${{ GITHUB_REPOSITORY.split("/")[1] }}
    repo-version:
        description: 'Value to store app version for tagging puposes'
        required: true
        default: 0.0.0

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
  
  publish-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and Push Artefact to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        env:
          BUILD_TYPE: ${{ inputs.build-lvl }}
        with:
          name: ubivius/${{ inputs.repo-name }}:${{ inputs.repo-version }}
          username: ${{ inputs.dockerhub-user }}
          password: ${{ inputs.dockerhub-pwd }}
          default_branch: ${{ GITHUB_REF }}
          dockerfile: Dockerfile
          buildargs: BUILD_TYPE
