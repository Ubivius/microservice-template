name: CI for Merge on dev

on:
  push:
    tags:
      - v*
    branches: [ dev ]

env:
  BUILD_TYPE: test
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_EMAIL: ${{ secrets.DOCKERHUB_EMAIL }}
  DOCKERHUB_PWD: ${{ secrets.DOCKERHUB_PWD }}
  DEV_GKE_USER: ${{ secrets.SERVICEACCOUNT_EMAIL }}
  DEV_GKE_JSON: ${{ secrets.SERVICEACCOUNT_JSONKEY }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Build
      run: go build -v ./...

    - name: Unit tests
      run: go test -short -v ./...

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
  
  publish-docker:
    needs: [ build-and-test, golangci-lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Pre-load env-var
        id: fetch-docker-vars
        run: |
            chmod 700 .github/tools_install.sh
            ./.github/tools_install.sh
            IN=$(echo ${GITHUB_REPOSITORY})
            NAME=${IN#"Ubivius/"}
            VERSION=$(yq e '.version' ./chart/Chart.yaml)
            echo "::set-output name=REPO_NAME::$(echo $NAME)"
            echo "::set-output name=BRANCH::$(echo $GITHUB_REF)"
            echo "::set-output name=REPO_VERSION::$(echo $VERSION)"
        shell: bash

      - name: Build and Push Artefact to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        env:
          BUILD_TYPE: ${{ env.BUILD_TYPE }}
        with:
          name: ubiviushub/${{ steps.fetch-docker-vars.outputs.REPO_NAME }}
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ env.DOCKERHUB_PWD }}
          buildargs: BUILD_TYPE
          dockerfile: Dockerfile
          tags: "${{ steps.fetch-docker-vars.outputs.REPO_VERSION }}"

  publish-helm:
    needs: [ build-and-test, golangci-lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare helm env
        id: fetch-helm-vars
        run: |
            chmod 700 .github/tools_install.sh
            ./.github/tools_install.sh

      - name: Package and Push Chart to ChartMuseum
        run: |
            IN=$(echo ${GITHUB_REPOSITORY})
            NAME=${IN#"Ubivius/"}
            VERSION=$(yq e '.version' ./chart/Chart.yaml)
            FULL_NAME="./${NAME}-${VERSION}.tgz"
            helm package chart/
            helm push $FULL_NAME ysma500 -f
